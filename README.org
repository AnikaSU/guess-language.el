
[[https://melpa.org/#/guess-language][file:https://melpa.org/packages/guess-language-badge.svg]]

* guess-language: Emacs minor mode for robust automatic language detection

Emacs minor mode that detects the language of what you're typing.  Automatically switches spell checker and typo-mode.

*Key features:*
- Detection algorithm is robust, efficient, and dead simple.  Based on
  character trigrams.
- Support for many languages.  More can be easily added.
- Stays out of your way.  Set up once, then forget it exists.
- Works with documents written in multiple languages.

-----

I write a lot of text in multiple languages and was getting tired of constantly having to switch the dictionary of my spell-checker.  In true Emacs spirit, I decided to dust off my grandpa's parentheses and wrote some code to address this problem.  The result is ~guess-language-mode~, a minor mode for Emacs that guesses the language of the current paragraph and then changes the dictionary of ispell and the language settings of typo-mode.  It also reruns Flyspell on the current paragraph, but only on that paragraph because I want to leave paragraphs in other languages untouched.  Language guessing is triggered when Flyspell detects an unknown word, but only if the paragraph has enough material to allow for robust detection of the language (~ 35 characters).

Currently, the following languages are supported: Arabic, Czech, Danish, Dutch, English, Finnish, French, German, Italian, Norwegian, Polish, Portuguese, Russian, Slovak, Slovenian, Spanish, Swedish.  It is very easy to add more languages and this repository includes the necessary language statistics for 49 additional languages.  (These were copied from [[https://github.com/kent37/guess-language][guess_language.py]].)

** Prerequisites

This mode assumes that Flyspell is activated and configured for all relevant languages, i.e., those listed in ~guess-language-languages~.  Guess-language also assumes that [[https://github.com/jorgenschaefer/typoel][typo-mode]] is installed and set up.

** Installation

Guess-language-mode is available through [[https://melpa.org/#/guess-language][MELPA]].

** Configuration

#+BEGIN_SRC elisp
(require 'guess-language)

;; Optionally:
(setq guess-language-languages '(en de))
(setq guess-language-min-paragraph-length 35)
#+END_SRC

~guess-language-languages~ defines the candidate languages that should be considered.  Only include languages that you actually use to improve performance.  Languages are identified using ISO 639-1 codes (see table below).

~guess-language-min-paragraph-length~ specifies the minimal length that a paragraph needs to have before guess-language-mode starts guessing.

For each language, there is a default Ispell dictionary that guess-language-mode tries to use.  However, for some languages there are several dictionaries available and guess-language can’t know which one you’d like to use.  For example, there are several different dictionaries for German and for English.  If the dictionary that guess-language-mode uses by default is not present, you will get an error message like the following:

#+BEGIN_SRC elisp
Error in post-command-hook (flyspell-post-command-hook): (error "Undefined dictionary: en")
#+END_SRC

In this case, use the variable ~guess-language-langcodes~ to tell guess-language-mode which dictionary should be used instead.  For example, use the following definition if you want to use British English and Swiss German:

#+BEGIN_SRC elisp
(setq guess-language-langcodes
  '((en . ("en_GB" "English"))
    (de . ("de_CH"    "German"))))
#+END_SRC



Available languages at this time:

| Language   | IDO 639-1 code | Ispell dictionary | Typo-mode setting |
|------------+----------------+-------------------+-------------------|
| Arabic     | ~ar~           | ar                |                   |
| Czech      | ~cs~           | czech             | Czech             |
| Danish     | ~da~           | dansk             |                   |
| Dutch      | ~nl~           | de                |                   |
| English    | ~en~           | en                | English           |
| Finnish    | ~fi~           | finnish           | Finnish           |
| French     | ~fr~           | francais          | French            |
| German     | ~de~           | de                | German            |
| Italian    | ~it~           | italiano          | Italian           |
| Norwegian  | ~nb~           | norsk             |                   |
| Polish     | ~pl~           | polish            |                   |
| Portuguese | ~pt~           | portuguese        |                   |
| Russian    | ~ru~           | russian           | Russian           |
| Slovak     | ~sk~           | slovak            |                   |
| Slovenian  | ~sl~           | slovenian         |                   |
| Spanish    | ~es~           | spanish           |                   |
| Swedish    | ~sv~           | svenska           |                   |


** Usage

Activate ~guess-language-mode~ in the buffer in which you want to use it.  To activate it automatically in buffers containing text (as opposed to code), add guess-language mode to ~text-mode-hook~:

#+BEGIN_SRC elisp
(add-hook 'text-mode-hook (lambda () (guess-language-mode 1)))
#+END_SRC
